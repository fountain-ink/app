-- Create chat_messages table
create table "public"."chat_messages" (
    "id" bigint generated by default as identity not null,
    "message" text not null,
    "author" text not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "edited" boolean not null default false,
    "deleted_at" timestamp with time zone,
    "metadata" jsonb default '{}'::jsonb
);

-- Add primary key
alter table "public"."chat_messages" add constraint "chat_messages_pkey" primary key ("id");

-- Create indexes for performance
create index "chat_messages_author_idx" on "public"."chat_messages" ("author");
create index "chat_messages_created_at_idx" on "public"."chat_messages" ("created_at" desc);
create index "chat_messages_deleted_at_idx" on "public"."chat_messages" ("deleted_at");

-- Enable RLS
alter table "public"."chat_messages" enable row level security;

-- Policy: Anyone can read non-deleted messages
create policy "Anyone can read messages"
on "public"."chat_messages"
for select
using (deleted_at is null);

-- Policy: Authenticated users can insert their own messages
create policy "Users can insert own messages"
on "public"."chat_messages"
for insert
with check (true);

-- Policy: Users can update their own messages
create policy "Users can update own messages"
on "public"."chat_messages"
for update
using (deleted_at is null)
with check (true);

-- Policy: All users can soft delete (we'll handle permissions in the app)
create policy "Users can delete messages"
on "public"."chat_messages"
for update
using (true);

-- Enable realtime
alter publication supabase_realtime add table "public"."chat_messages";

-- Function to automatically update updated_at timestamp
create or replace function update_updated_at_column()
returns trigger as $$
begin
    new.updated_at = now();
    return new;
end;
$$ language plpgsql;

-- Trigger to update updated_at on row update
create trigger update_chat_messages_updated_at
before update on "public"."chat_messages"
for each row
execute function update_updated_at_column();