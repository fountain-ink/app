"use client";

import { motion, useInView } from "framer-motion";
import { useTheme } from "next-themes";
import { useRef } from "react";

export const FountainLogo = () => {
  const { theme } = useTheme();

  if (theme === "dark") {
    return (
      <svg width="13" height="26" viewBox="0 0 13 26" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="Group 5609">
          <title> </title>
          <path
            id="Vector"
            d="M6.6988 0.0039449C6.69828 0.00164082 6.69623 0 6.69387 0C6.69108 0 6.68881 0.00226472 6.68881 0.00505839V11.607C6.68881 12.6297 7.53068 13.6612 7.53068 14.6838C7.53068 15.4684 7.0155 16.1037 6.37915 16.1042C5.7428 16.1037 5.22762 15.4684 5.22762 14.6838C5.22762 13.6612 6.06949 12.6297 6.06949 11.607V0.00505837C6.06949 0.00226491 6.06722 0 6.06443 0C6.06207 0 6.06002 0.0016406 6.05949 0.0039445C4.9655 4.82591 3.15864 9.29141 0.892273 13.5273C0.345305 14.5495 0.308098 15.7608 0.645028 16.8702C0.812838 17.4227 0.957761 18.0075 1.07914 18.6255C1.44968 20.5121 2.99307 22.0257 4.91571 22.0257H7.84258C9.76523 22.0257 11.3086 20.5121 11.6792 18.6255C11.8005 18.0075 11.9455 17.4227 12.1133 16.8702C12.4502 15.7608 12.413 14.5495 11.866 13.5273C9.59966 9.29141 7.79279 4.82591 6.6988 0.0039449Z"
            className="fill-primary"
          />
          <path
            id="Vector_2"
            d="M10.9188 24.1475C10.9188 24.792 10.3963 25.3145 9.75181 25.3145H3.00687C2.36234 25.3145 1.83984 24.792 1.83984 24.1475C1.83984 23.503 2.36234 22.9805 3.00687 22.9805H9.75181C10.3963 22.9805 10.9188 23.503 10.9188 24.1475Z"
            className="fill-primary"
          />
        </g>
      </svg>
    );
  }
  return (
    <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
      <title> </title>
      <path
        className="fill-primary"
        d="M15.6988 2.00394C15.6983 2.00164 15.6962 2 15.6939 2C15.6911 2 15.6888 2.00226 15.6888 2.00506V13.607C15.6888 14.6297 16.5307 15.6612 16.5307 16.6838C16.5307 17.4684 16.0155 18.1037 15.3791 18.1042C14.7428 18.1037 14.2276 17.4684 14.2276 16.6838C14.2276 15.6612 15.0695 14.6297 15.0695 13.607V2.00506C15.0695 2.00226 15.0672 2 15.0644 2C15.0621 2 15.06 2.00164 15.0595 2.00394C13.9655 6.82591 12.1586 11.2914 9.89227 15.5273C9.34531 16.5495 9.3081 17.7608 9.64503 18.8702C9.81284 19.4227 9.95776 20.0075 10.0791 20.6255C10.4497 22.5121 11.9931 24.0257 13.9157 24.0257H16.8426C18.7652 24.0257 20.3086 22.5121 20.6792 20.6255C20.8005 20.0075 20.9455 19.4227 21.1133 18.8702C21.4502 17.7608 21.413 16.5495 20.866 15.5273C18.5997 11.2914 16.7928 6.82591 15.6988 2.00394Z"
      />
      <path
        className="fill-primary"
        d="M19.9188 26.1475C19.9188 26.792 19.3963 27.3145 18.7518 27.3145H12.0069C11.3623 27.3145 10.8398 26.792 10.8398 26.1475C10.8398 25.503 11.3623 24.9805 12.0069 24.9805H18.7518C19.3963 24.9805 19.9188 25.503 19.9188 26.1475Z"
      />
    </svg>
  );
};

export const GraphicHand = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="2900"
      height="2100"
      viewBox="0 0 2900 2100"
      style={{ width: "100%", height: "100%" }}
      fill="none"
    >
      <title> </title>
      <motion.path
        className="stroke-primary"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="10"
        initial={{ pathLength: 0 }}
        animate={{ pathLength: 1 }}
        transition={{ duration: 5, ease: "easeInOut" }}
        d="M8.24 692s797.97-6.96 795.41 5.83c-2.56 12.79-58.84 23.02-40.93 5.11 17.9-17.9 127.91-81.86 186.75-97.21 58.84-15.35 71.63-10.23 92.1-17.9 20.46-7.67 107.44-74.2 179.07-97.21 71.63-23.03 84.42 2.55 84.42 2.55l-25.58 20.46s25.58 79.31-7.67 133.03-97.21 56.28-120.23 40.93c-23.03-15.35-61.4-69.08-81.87-69.08-20.47 0-33.25 2.56-33.25 12.8s56.28 58.83 15.35 107.44c-40.93 48.6-143.26 69.07-181.64 46.05-38.37-23.03-46.05-76.75-33.26-97.21 12.79-20.46 148.38-69.08 168.84-56.28 20.47 12.78 10.23 40.93 20.47 20.46 10.23-20.46 0-38.37 69.07-69.07 69.07-30.7 130.47-76.75 153.49-58.84 23.02 17.91 58.84-2.55 58.84-2.55S969.93 679.92 949.47 702.94c-20.46 23.03-51.16 184.2-51.16 133.03 0-51.17 0-112.57 23.02-138.14 23.02-25.58 289.08-145.82 301.87-145.82 12.79 0 153.49 33.26 112.56 43.49-40.93 10.23-99.77-43.49-181.63-28.15-81.86 15.35-283.96 120.24-301.87 140.71-17.91 20.46-99.77 115.12-89.53 140.7 10.23 25.58 53.72 23.02 25.58 35.81-28.14 12.79-240.47 10.24-240.47 53.73 0 43.49 33.26 424.66 56.28 440.01 23.03 15.35 243.03-17.91 248.15-33.26 5.12-15.34-43.49-434.9-58.84-440.02-15.35-5.11-220.01 15.35-220.01 35.82s35.81 401.64 51.16 406.75c15.35 5.12 189.31 5.12 202.1-28.14 12.79-33.25-46.05-376.06-35.82-386.29 0 0 29.48-72.69 94.09-17.77 64.61 54.91 88.83 413.49 93.68 352.11 4.85-61.38-16.15-339.2 17.77-331.12 33.92 8.08 17.77 205.13 30.69 155.06 12.92-50.06 25.84-130.83 53.3-174.44 27.46-43.61 61.38-58.15 62.99-27.46 1.62 30.68-43.61 237.44-43.61 203.52 0-33.92 101.76-250.37 116.29-206.75 14.54 43.62-72.68 261.67-56.53 226.13 16.15-35.53 116.3-211.6 121.14-163.14 4.85 48.45-64.61 182.52-64.61 219.67 0 37.15 3.24 93.68 25.85 80.77 22.61-12.93 122.75-100.15 156.67-67.84 33.92 32.31-9.69 16.15-43.61 71.07-33.92 54.92-48.46 69.45-87.22 96.92-38.77 27.46-71.07 45.22-77.54 54.91-6.46 9.69-144.36 259.29-178.81 365.29-34.46 106.01-34.46 291.53-58.3 286.22-23.85-5.29-310.08 2.66-310.08 2.66S823.24 1695.9 916 1518.33c92.76-177.57 74.21-219.97 74.21-219.97s26.5 169.62 95.41 135.17c68.9-34.46 100.71-100.71 119.26-90.11 18.55 10.6 127.21 397.53 135.16 397.53 7.95 0 657.26-193.46 657.26-193.46L1642.17 577.5s-628.11 188.17-630.75 201.42c-2.65 13.25 45.05 135.16 42.4 124.56-2.65-10.6-31.11-101.93-1.96-120.48 29.15-18.55 574.41-181.64 585.02-173.69 10.6 7.95 92.76 265.02 92.76 265.02s26.5 29.15 13.24 31.8c-13.24 2.66-140.46-37.1-164.31-23.85-23.85 13.26-87.46 103.37-63.6 106.01 23.85 2.65 320.67-140.46 320.67-140.46s15.9 23.85 7.95 29.16c-7.95 5.29-307.42 129.86-288.87 129.86 18.55 0 106.01-31.8 106.01-13.25s-37.1 39.75-58.31 31.8c-21.21-7.95-68.91-39.75-116.61-23.85-47.7 15.9-53.01 34.45-13.25 58.3 39.75 23.85 121.91 26.51 143.12 60.96 21.21 34.46 58.3 90.11 111.31 113.96 53.01 23.85 108.66 55.65 132.51 84.81 23.86 29.16 235.88 347.18 280.93 437.3 45.06 90.1 71.56 135.15 92.76 137.8 21.21 2.66-18.56-7.95-18.56 15.9s5.3 113.96-26.5 119.27c-31.8 5.31 331.28 15.9 331.28-10.6s34.45-121.91-23.85-257.07c-58.31-135.16-402.83-474.39-490.3-522.09-81.42-58.07-169.6-262.78-180.21-225.28-19.71 36.18 55.28 114.38 148.41 100.71 74.21 0 113.96-71.55 53.01-113.95-60.96-42.41-108.66-148.42-79.51-227.92 29.16-79.51 111.31-156.36 257.07-137.81 145.76 18.56 185.52 148.42 174.92 254.43-10.61 106.01-129.86 185.52-241.17 148.41-111.31-37.1-124.57-185.52-103.36-241.17 21.21-55.65-37.11 47.71 18.56 124.56 55.65 76.86 198.76 98.06 241.17-5.3 42.4-103.36 26.5-177.57-71.56-212.02-98.05-34.45-169.61 58.31-156.36 58.31s92.76-79.51 119.27-31.8c26.5 47.7-60.96 47.7-39.75 100.71 21.2 53 98.05 23.85 82.15 68.91-15.9 45.05-42.4 47.7-23.85 63.6 18.55 15.9 23.85 84.81-7.95 74.2-31.8-10.6-23.85-42.4-37.1-39.75-13.25 2.66-68.91 0-66.25 34.46 2.65 34.45 799.04 13.75 799.04 13.75"
      />
    </svg>
  );
};

export const GraphicInk = () => {
  const ref = useRef(null);
  const isInView = useInView(ref, {
    once: true,
    margin: "0px 100px -50px 0px",
  });

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 722 362"
      width="822"
      height="362"
      style={{
        zIndex: 5,
        width: "100%",
        height: "100%",
        transform: "translate3d(0px, 0px, 0px)",
      }}
      preserveAspectRatio="xMidYMid slice"
    >
      <title> </title>
      <defs>
        <clipPath id="__lottie_element_2">
          <rect width="822" height="362" x="0" y="0" />
        </clipPath>
      </defs>
      <g clipPath="url(#__lottie_element_2)">
        <g transform="matrix(1.333299994468689,0,0,1.333299994468689,0,0)" opacity="1">
          <g opacity="1" transform="matrix(0.75,0,0,0.75,0,0)">
            <motion.path
              className="stroke-primary"
              strokeLinecap="round"
              strokeLinejoin="round"
              fillOpacity="0"
              strokeOpacity="1"
              strokeWidth="1.69"
              d=" M685.280029296875,180.9600067138672 C653.9299926757812,176.3300018310547 600.1099853515625,189.0399932861328 607.030029296875,171.99000549316406 C621.6900024414062,135.8699951171875 655.6199951171875,127.16999816894531 663.72998046875,123.11000061035156 C673.3200073242188,118.30000305175781 663.1799926757812,114.83999633789062 654.3699951171875,109.19000244140625 C645.5800170898438,103.55999755859375 633.4000244140625,129.10000610351562 633.1500244140625,132.57000732421875 C632.8900146484375,136.0500030517578 629.8699951171875,114.69000244140625 615.8099975585938,103.83000183105469 C601.7999877929688,93 575.7999877929688,138.88999938964844 566.9400024414062,136.72999572753906 C558.0900268554688,134.55999755859375 593.1599731445312,102.52999877929688 602.0800170898438,104.66000366210938 C611.030029296875,106.80999755859375 622.6300048828125,119.7300033569336 623.3499755859375,125.63999938964844 C624.0599975585938,131.55999755859375 506.44000244140625,198.88999938964844 488.9599914550781,210.5399932861328 C471.54998779296875,222.13999938964844 436.44000244140625,251.99000549316406 436.1099853515625,256.5199890136719 C435.7799987792969,261.04998779296875 507,236.99000549316406 512,229.5500030517578 C516.989990234375,222.11000061035156 516.2899780273438,201.25999450683594 506.44000244140625,198.89999389648438 C496.6300048828125,196.5500030517578 519.1199951171875,223.52999877929688 519.1199951171875,223.52999877929688 C519.1199951171875,223.52999877929688 612.8400268554688,163.77000427246094 639.5599975585938,144.42999267578125 C643.760009765625,141.38999938964844 646.27001953125,139.35000610351562 646.469970703125,138.74000549316406 C647.9500122070312,134.22999572753906 644.3099975585938,120.95999908447266 635.4600219726562,116.4800033569336 C633.8599853515625,115.66000366210938 624.6099853515625,121.62999725341797 611.02001953125,131.47999572753906 C609.3900146484375,132.66000366210938 601.0999755859375,148.97999572753906 599.3499755859375,150.27000427246094 C551.6300048828125,185.4499969482422 459.30999755859375,243.0500030517578 443.1400146484375,253.3699951171875 C423.239990234375,266.0799865722656 198.97999572753906,255.8300018310547 136.33999633789062,260.07000732421875"
              initial={{ pathLength: 0, pathOffset: 1 }}
              animate={isInView ? { pathLength: 1, pathOffset: 0 } : { pathLength: 0, pathOffset: 1 }}
              transition={{ duration: 3, ease: "easeInOut" }}
            />
          </g>
        </g>
      </g>
    </svg>
  );
};

export const WidthColumn = () => (
  <svg style={{ width: "100%", height: "100%" }} viewBox="0 0 36 37" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g>
      <rect x="10" y="10.5" width="17" height="1.5" rx="0.75" fill="currentColor" />
      <rect x="10" y="24.5" width="17" height="1.5" rx="0.75" fill="currentColor" />
      <rect x="10" y="12.5" width="17" height="11.5" rx="2" fill="currentColor" />
    </g>
  </svg>
);

export const WidthFull = () => (
  <svg style={{ width: "100%", height: "100%" }} viewBox="0 0 36 37" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g>
      <g>
        <rect x="13" y="24.5" width="11" height="1.5" rx="0.75" fill="currentColor" />
        <rect x="9" y="10.5" width="19" height="13" fill="currentColor" />
      </g>
    </g>
  </svg>
);

export const WidthWide = () => (
  <svg style={{ width: "100%", height: "100%" }} viewBox="0 0 36 37" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g>
      <g>
        <rect x="13" y="10.5" width="11" height="1.5" rx="0.75" fill="currentColor" />
        <rect x="13" y="24.5" width="11" height="1.5" rx="0.75" fill="currentColor" />
        <rect x="10" y="12.5" width="17" height="11.5" rx="2" fill="currentColor" />
      </g>
    </g>
  </svg>
);

export const LensLogo = () => {
  const { theme } = useTheme();

  if (theme === "dark") {
    return <LensDark />;
  }
  return <LensLight />;
};

const LensDark = () => {
  return (
    <svg width="24" height="24" viewBox="23 76 38 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M49.2074 82.3186C50.7676 81.0227 52.5086 80.5296 54.1782 80.6542C55.9592 80.7872 57.6073 81.6182 58.8381 82.8252C60.069 84.0323 60.9146 85.6469 61.0499 87.3893C61.1865 89.1477 60.5951 90.9893 59.0357 92.6057C58.8931 92.7544 58.7473 92.9014 58.5985 93.0465C51.5258 99.9817 42.1307 100 42.0346 100H42.0341C41.9861 100 32.5612 99.9996 25.4701 93.0455L25.4685 93.044C25.3221 92.8995 25.178 92.7542 25.036 92.6079L25.0348 92.6067C23.4747 90.9918 22.8827 89.1506 23.0189 87.3922C23.1538 85.6501 23.9988 84.0353 25.2293 82.8278C26.4598 81.6203 28.1077 80.7887 29.889 80.6552C31.5585 80.53 33.2998 81.0225 34.861 82.3178C35.0288 80.3199 35.9035 78.765 37.173 77.6961C38.5271 76.556 40.2917 76 42.0341 76C43.7766 76 45.5412 76.556 46.8952 77.6961C48.165 78.7652 49.0397 80.3204 49.2074 82.3186ZM42.3579 99.2968L42.3576 99.288L42.3582 99.288L42.3579 99.2968ZM41.7104 99.2968L41.7101 99.288L41.7107 99.288L41.7104 99.2968ZM47.3477 89.6667C47.1543 89.6667 47.0873 89.9408 47.2107 90.0859C47.4293 90.3431 47.5607 90.6739 47.5607 91.0348C47.5607 91.8538 46.8838 92.5177 46.0487 92.5177C45.2136 92.5177 44.5366 91.8538 44.5366 91.0348C44.5366 90.991 44.4783 90.9692 44.452 91.0047C44.2135 91.3259 44.0525 91.6865 43.9863 92.0652C43.9491 92.2784 43.7724 92.455 43.5503 92.455H43.4277C43.1378 92.455 42.8987 92.2246 42.9415 91.9454C43.2347 90.0321 45.1576 88.6445 47.3477 88.6445C49.5379 88.6445 51.4607 90.0321 51.754 91.9454C51.7967 92.2246 51.5576 92.455 51.2678 92.455C50.978 92.455 50.7485 92.2235 50.6855 91.9479C50.3988 90.6938 49.0699 89.6667 47.3477 89.6667ZM33.9205 91.0348C33.9205 90.977 33.8441 90.946 33.8082 90.992C33.5532 91.3182 33.3795 91.6877 33.306 92.0771C33.2626 92.3071 33.0718 92.4982 32.8317 92.4982H32.7417C32.4519 92.4982 32.2128 92.2678 32.2555 91.9886C32.5486 90.0743 34.4717 88.6876 36.6618 88.6876C38.8519 88.6876 40.775 90.0743 41.068 91.9886C41.1108 92.2678 40.8717 92.4982 40.5819 92.4982C40.2921 92.4982 40.0626 92.2666 39.9996 91.9911C39.7131 90.7362 38.3842 89.7099 36.6618 89.7099C36.5052 89.7099 36.4479 89.9255 36.5527 90.0387C36.7963 90.302 36.9446 90.6514 36.9446 91.0348C36.9446 91.8538 36.2677 92.5177 35.4326 92.5177C34.5975 92.5177 33.9205 91.8538 33.9205 91.0348ZM43.7162 94.6108C43.9211 94.4111 44.2376 94.314 44.4919 94.4494C44.7463 94.5847 44.8428 94.899 44.6595 95.1176C44.0625 95.8298 43.096 96.281 42.0301 96.281C40.9647 96.281 39.9961 95.8345 39.3983 95.117C39.2157 94.8978 39.3134 94.5838 39.5682 94.4494C39.823 94.3149 40.1391 94.4132 40.3436 94.6132C40.7376 94.9984 41.3355 95.2588 42.0301 95.2588C42.7228 95.2588 43.3214 94.9958 43.7162 94.6108Z"
        fill="white"
      />
    </svg>
  );
};

const LensLight = () => {
  return (
    <svg width="24" height="24" viewBox="23 76 38 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M49.2074 82.3186C50.7676 81.0227 52.5086 80.5296 54.1782 80.6542C55.9592 80.7872 57.6073 81.6182 58.8381 82.8252C60.069 84.0323 60.9146 85.6469 61.0499 87.3893C61.1865 89.1477 60.5951 90.9893 59.0357 92.6057C58.8931 92.7544 58.7473 92.9014 58.5985 93.0465C51.5258 99.9817 42.1307 100 42.0346 100H42.0341C41.9861 100 32.5612 99.9996 25.4701 93.0455L25.4685 93.044C25.3221 92.8995 25.178 92.7542 25.036 92.6079L25.0348 92.6067C23.4747 90.9918 22.8827 89.1506 23.0189 87.3922C23.1538 85.6501 23.9988 84.0353 25.2293 82.8278C26.4598 81.6203 28.1077 80.7887 29.889 80.6552C31.5585 80.53 33.2998 81.0225 34.861 82.3178C35.0288 80.3199 35.9035 78.765 37.173 77.6961C38.5271 76.556 40.2917 76 42.0341 76C43.7766 76 45.5412 76.556 46.8952 77.6961C48.165 78.7652 49.0397 80.3204 49.2074 82.3186ZM42.3579 99.2968L42.3576 99.288L42.3582 99.288L42.3579 99.2968ZM41.7104 99.2968L41.7101 99.288L41.7107 99.288L41.7104 99.2968ZM47.3477 89.6667C47.1543 89.6667 47.0873 89.9408 47.2107 90.0859C47.4293 90.3431 47.5607 90.6739 47.5607 91.0348C47.5607 91.8538 46.8838 92.5177 46.0487 92.5177C45.2136 92.5177 44.5366 91.8538 44.5366 91.0348C44.5366 90.991 44.4783 90.9692 44.452 91.0047C44.2135 91.3259 44.0525 91.6865 43.9863 92.0652C43.9491 92.2784 43.7724 92.455 43.5503 92.455H43.4277C43.1378 92.455 42.8987 92.2246 42.9415 91.9454C43.2347 90.0321 45.1576 88.6445 47.3477 88.6445C49.5379 88.6445 51.4607 90.0321 51.754 91.9454C51.7967 92.2246 51.5576 92.455 51.2678 92.455C50.978 92.455 50.7485 92.2235 50.6855 91.9479C50.3988 90.6938 49.0699 89.6667 47.3477 89.6667ZM33.9205 91.0348C33.9205 90.977 33.8441 90.946 33.8082 90.992C33.5532 91.3182 33.3795 91.6877 33.306 92.0771C33.2626 92.3071 33.0718 92.4982 32.8317 92.4982H32.7417C32.4519 92.4982 32.2128 92.2678 32.2555 91.9886C32.5486 90.0743 34.4717 88.6876 36.6618 88.6876C38.8519 88.6876 40.775 90.0743 41.068 91.9886C41.1108 92.2678 40.8717 92.4982 40.5819 92.4982C40.2921 92.4982 40.0626 92.2666 39.9996 91.9911C39.7131 90.7362 38.3842 89.7099 36.6618 89.7099C36.5052 89.7099 36.4479 89.9255 36.5527 90.0387C36.7963 90.302 36.9446 90.6514 36.9446 91.0348C36.9446 91.8538 36.2677 92.5177 35.4326 92.5177C34.5975 92.5177 33.9205 91.8538 33.9205 91.0348ZM43.7162 94.6108C43.9211 94.4111 44.2376 94.314 44.4919 94.4494C44.7463 94.5847 44.8428 94.899 44.6595 95.1176C44.0625 95.8298 43.096 96.281 42.0301 96.281C40.9647 96.281 39.9961 95.8345 39.3983 95.117C39.2157 94.8978 39.3134 94.5838 39.5682 94.4494C39.823 94.3149 40.1391 94.4132 40.3436 94.6132C40.7376 94.9984 41.3355 95.2588 42.0301 95.2588C42.7228 95.2588 43.3214 94.9958 43.7162 94.6108Z"
        fill="black"
      />
    </svg>
  );
};
